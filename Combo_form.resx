<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>